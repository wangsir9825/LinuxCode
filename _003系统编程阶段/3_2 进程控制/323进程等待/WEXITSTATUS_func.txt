#include <stdio.h>//perror
#include <unistd.h>//fork
#include <stdlib.h>//exit
#include <sys/wait.h>//wait

int main()
{
    pid_t pid = fork();
    if (pid < 0){
        perror("fork error");//打印错误信息      
        return -1;
    }else if (pid == 0){
        sleep(3);//睡眠3秒
        exit(99);//退出子进程，退出返回值为99
    }
    int status;
    wait(&status);
    if((status & 0x7f) == 0){ // 正常退出
        printf("子进程正常退出，退出返回值为：%d\n", (status >> 8) & 0xff);
    }else{ //异常退出
        printf("子进程异常退出，异常值为：%d\n", status & 0x7f);
    }
    while(1){
        printf("父进程正在运行\n");
        sleep(1);
    }
}
